@model FuncaoSistemas_FM.Models.ClienteModel

@{
    ViewBag.Title = "Cadastrar Cliente";    
    var UF = new[]
{
new SelectListItem(){ Value = "", Text = "Selecione"},
new SelectListItem(){ Value = "SP", Text = "São Paulo"},
new SelectListItem(){ Value = "PE", Text = "Pernambuco"}
};
}

<h2>@Html.Raw(ViewBag.Title)</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formCadastro" }))
{
    @Html.AntiForgeryToken()


    @Html.ValidationSummary(true, "", new { @class = "text-danger", id="erro_form" })
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ex.: João", @maxlength = "50" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Sobrenome, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Sobrenome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ex.: da Silva", @maxlength = "50" } })
                @Html.ValidationMessageFor(model => model.Sobrenome, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control", @placeholder = "Digite no formato 999.999.999-99", @maxlength = "14", @id = "doc" } })
                @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Nacionalidade, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Nacionalidade, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ex.: Brasileira", @maxlength = "50" } })
                @Html.ValidationMessageFor(model => model.Nacionalidade, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.CEP, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.CEP, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ex.: 01011-100", @maxlength = "9" } })
                @Html.ValidationMessageFor(model => model.CEP, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.Estado, UF, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control", @maxlength = "50", @placeholder = "Ex.: São Paulo" } })
                @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                @Html.LabelFor(model => model.Logradouro, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Logradouro, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ex.: Rua Boa Vista 253", @maxlength = "500" } })
                @Html.ValidationMessageFor(model => model.Logradouro, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @type = "email", @placeholder = "Ex.: email@email.com", @maxlength = "2079" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ex.: (11) 2020-3030", @maxlength = "15", @type="tel", @pattern = "([0-9]{2})[0-9]{5}-[0-9]{4}" } })
                @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="form-group">
                <div class="pull-left">
                    <button type="button" class="btn btn-sm btn-default" data-toggle="modal" data-target="#modalBeneficiario">Beneficiários</button>
                </div>
                <div class="pull-right">
                    <input type="submit" value="Salvar" class="btn btn-sm btn-success" id="btn-salvar"/>
                    @Html.ActionLink("Voltar", "Index", "Cliente", new { }, new { @class = "btn btn-sm btn-danger" })
                </div>
            </div>
        </div>
    </div>
    @RenderPage("Beneficiario.cshtml")
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/inputmask")
    <script type="text/javascript">
        $(document).ready(function () {                        
            $("#doc").inputmask("999.999.999-99");
            $("#CPF").inputmask("999.999.999-99");
            $("#btn-salvar").bind("click", function () {
                $.ajax({
                    url: "/Cliente/Incluir"
                    , data: $('#formCadastro *').serialize()
                    , type: 'POST'
                    , dataType: 'json'
                    , success: function (json) {
                        ModalDialog("Sucesso", json.responseText);
                        $("formCadastro")[0].reset();
                        return true;
                    }
                    , error: function (json) {
                        if (json.status == 400) {
                            ModalDialog("Ocorreu um erro", json.responseText);
                            return false;
                        } else if (json.status == 500) {
                            ModalDialog("Ocorreu um erro", "Erro Interno no Servidor");
                            return false;
                        } else {
                            ModalDialog("Erro Desconhecido", json.responseText);
                            return false;
                        }
                    }
                });

                function ModalDialog(titulo, texto) {
                    var random = Math.random().toString().replace('.', '');
                    var texto = '<div id="' + random + '" class="modal fade">                                                               ' +
                        '        <div class="modal-dialog">                                                                                 ' +
                        '            <div class="modal-content">                                                                            ' +
                        '                <div class="modal-header">                                                                         ' +
                        '                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>         ' +
                        '                    <h4 class="modal-title">' + titulo + '</h4>                                                    ' +
                        '                </div>                                                                                             ' +
                        '                <div class="modal-body">                                                                           ' +
                        '                    <p>' + texto + '</p>                                                                           ' +
                        '                </div>                                                                                             ' +
                        '                <div class="modal-footer">                                                                         ' +
                        '                    <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>             ' +
                        '                                                                                                                   ' +
                        '                </div>                                                                                             ' +
                        '            </div><!-- /.modal-content -->                                                                         ' +
                        '  </div><!-- /.modal-dialog -->                                                                                    ' +
                        '</div> <!-- /.modal -->                                                                                        ';

                    $('body').append(texto);
                    $('#' + random).modal('show');
                };
            });

            var qtdBeneficiarios = 0;

            $("#btn-incluir-beneficiario").click(function (e) {
                e.preventDefault();
                
                var blocoBeneficiario = '<div class="row">' +
                    '    <div class="col-md-4">' +                    
                    '        <input type="number" name="Beneficiarios[' + qtdBeneficiarios + '].CPF" maxlength="14" placeholder="CPF" class="form-control txt-cpf"/>' +
                    '    </div>' +
                    '    <div class="col-md-6">' +
                    '        <input type="text" name="Beneficiarios[' + qtdBeneficiarios + '].Nome" placeholder="Nome" class="form-control txt-nome" />' +
                    '    </div>' +                    
                    '    <div class="col-md-2">' +
                    '        <button class="btn btn-danger btn-remover-beneficiario">' +
                    '            <span class="glyphicon glyphicon-trash"></span>' +
                    '        </button>' +
                    '    </div>' +
                    '</div>';

                $("#div-beneficiarios").append(blocoBeneficiario);

                qtdBeneficiarios++;
            });

            $("#div-beneficiarios").on("click", ".btn-remover-beneficiario", function (e) {
                e.preventDefault();

                $(this).parent().parent().remove();

                qtdBeneficiarios--;

                $("#div-beneficiarios .row").each(function (indice, elemento) {
                    $(elemento).find(".txt-cpf").attr("name", "Bneficiarios[" + indice + "].CPF");
                    $(elemento).find(".txt-nome").attr("name", "Beneficiarios[" + indice + "].Nome");                    
                });
            }); 

            
        });        
    </script>
}
