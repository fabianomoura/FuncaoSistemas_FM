@model FuncaoSistemas_FM.Models.ClienteModel

@{
    ViewBag.Title = "Cadastrar Cliente";
    var UF = new[]
    {
new SelectListItem(){ Value = "", Text = "Selecione"},
new SelectListItem(){ Value = "SP", Text = "São Paulo"},
new SelectListItem(){ Value = "PE", Text = "Pernambuco"}
};
}

<h2>@Html.Raw(ViewBag.Title)</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ex.: João", @maxlength = "50" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Sobrenome, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Sobrenome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ex.: da Silva", @maxlength = "50" } })
                @Html.ValidationMessageFor(model => model.Sobrenome, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control", @placeholder = "Digite no formato 999.999.999-99", @maxlength = "14", @id = "doc" } })
                @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Nacionalidade, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Nacionalidade, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ex.: Brasileira", @maxlength = "50" } })
                @Html.ValidationMessageFor(model => model.Nacionalidade, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.CEP, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.CEP, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ex.: 01011-100", @maxlength = "9" } })
                @Html.ValidationMessageFor(model => model.CEP, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.Estado, UF, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control", @maxlength = "50", @placeholder = "Ex.: São Paulo" } })
                @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                @Html.LabelFor(model => model.Logradouro, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Logradouro, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ex.: Rua Boa Vista 253", @maxlength = "500" } })
                @Html.ValidationMessageFor(model => model.Logradouro, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @type = "email", @placeholder = "Ex.: email@email.com", @maxlength = "2079" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ex.: (11) 2020-3030", @maxlength = "15", @type="tel", @pattern = "([0-9]{2})[0-9]{5}-[0-9]{4}" } })
                @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="form-group">
                <div class="pull-left">
                    <button type="button" class="btn btn-sm btn-default" data-toggle="modal" data-target="#modalBeneficiario">Beneficiários</button>
                </div>
                <div class="pull-right">
                    <input type="submit" value="Salvar" class="btn btn-sm btn-success" />
                    @Html.ActionLink("Voltar", "Index", "Cliente", new { }, new { @class = "btn btn-sm btn-danger" })
                </div>
            </div>
        </div>
    </div>
    @RenderPage("Beneficiario.cshtml")
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/inputmask")
    <script type="text/javascript">
        $(document).ready(function () {
            $("#doc").inputmask("999.999.999-99");
            $("#docCPF").inputmask("999.999.999-99");
        });
    </script>
}
